networks:
  odp-net:
    name: odp-net
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
          ip_range: 172.28.5.0/24
          gateway: 172.28.0.1

volumes:
  redis-data:
    name: redis-data

services:
  odp-identity:
    container_name: odp-identity
    build:
      context: ..
      dockerfile: deploy/odp-identity/Dockerfile
      args:
        - CA_CERT_URL
    networks:
      - odp-net
    ports:
      - "4019:4019"
    extra_hosts:
      - "${ODP_ADMIN_HOST}:172.28.0.1"
    environment:
      - ODP_ENV
      - FLASK_ENV=${ODP_ENV}
      - ODP_IDENTITY_FLASK_KEY
      - ODP_DB_HOST=172.28.0.1
      - ODP_DB_NAME
      - ODP_DB_USER
      - ODP_DB_PASS
      - ODP_MAIL_HOST
      - ODP_MAIL_PORT
      - ODP_MAIL_TLS
      - ODP_MAIL_USERNAME
      - ODP_MAIL_PASSWORD
      - ODP_IDENTITY_LOGIN_EXPIRY=2592000
      - ODP_IDENTITY_NCCRD_BRAND_CLIENT_ID
      - HYDRA_ADMIN_URL
      - REDIS_HOST=redis
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
      - GUNICORN_CMD_ARGS=--forwarded-allow-ips=*
      - TZ
      - GOOGLE_ENABLE
      - GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET
      - GOOGLE_SCOPE=["openid","email","profile"]
      - GOOGLE_AUTH_URI=https://accounts.google.com/o/oauth2/auth
      - GOOGLE_TOKEN_URI=https://oauth2.googleapis.com/token
      - GOOGLE_OPENID_URI=https://accounts.google.com/.well-known/openid-configuration
      - PYTHONUNBUFFERED=1
    restart: always

  odp-api:
    container_name: odp-api
    build:
      context: ..
      dockerfile: deploy/odp-api/Dockerfile
      args:
        - CA_CERT_URL
    networks:
      - odp-net
    ports:
      - "4020:4020"
    extra_hosts:
      - "${ODP_ADMIN_HOST}:172.28.0.1"
    environment:
      - ODP_ENV
      - ODP_API_PATH_PREFIX=/api
      - ODP_API_ALLOW_ORIGINS
      - ODP_API_CATALOG_UI_URL
      - ODP_DB_HOST=172.28.0.1
      - ODP_DB_NAME
      - ODP_DB_USER
      - ODP_DB_PASS
      - HYDRA_ADMIN_URL
      - HYDRA_PUBLIC_URL
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
      - TZ
      - PYTHONUNBUFFERED=1
    restart: always

  odp-ui-admin:
    container_name: odp-ui-admin
    build:
      context: ..
      dockerfile: deploy/odp-ui-admin/Dockerfile
      args:
        - CA_CERT_URL
    networks:
      - odp-net
    ports:
      - "4021:4021"
    extra_hosts:
      - "${ODP_PUBLIC_HOST}:172.28.0.1"
    environment:
      - ODP_ENV
      - FLASK_ENV=${ODP_ENV}
      - ODP_UI_ADMIN_FLASK_KEY
      - ODP_UI_ADMIN_CLIENT_ID
      - ODP_UI_ADMIN_CLIENT_SECRET
      - ODP_UI_API_URL=http://odp-api:4020
      - ODP_CLI_ADMIN_CLIENT_ID
      - ODP_CLI_ADMIN_CLIENT_SECRET
      - HYDRA_PUBLIC_URL
      - REDIS_HOST=redis
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
      - GUNICORN_CMD_ARGS=--forwarded-allow-ips=*
      - TZ
      - PYTHONUNBUFFERED=1
    restart: always

  odp-ui-dap:
    container_name: odp-ui-dap
    build:
      context: ..
      dockerfile: deploy/odp-ui-dap/Dockerfile
      args:
        - CA_CERT_URL
    networks:
      - odp-net
    ports:
      - "4023:4023"
    extra_hosts:
      - "${ODP_PUBLIC_HOST}:172.28.0.1"
    environment:
      - ODP_ENV
      - FLASK_ENV=${ODP_ENV}
      - ODP_UI_DAP_FLASK_KEY
      - ODP_UI_DAP_CLIENT_ID
      - ODP_UI_DAP_CLIENT_SECRET
      - ODP_UI_DAP_THREDDS_URL
      - ODP_UI_API_URL=http://odp-api:4020
      - ODP_CLI_PUBLIC_CLIENT_ID
      - ODP_CLI_PUBLIC_CLIENT_SECRET
      - HYDRA_PUBLIC_URL
      - REDIS_HOST=redis
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
      - GUNICORN_CMD_ARGS=--forwarded-allow-ips=*
      - TZ
      - PYTHONUNBUFFERED=1
    restart: always

  hydra:
    container_name: hydra
    image: ${HYDRA_IMAGE}
    networks:
      - odp-net
    ports:
      - "4444:4444"
      - "4445:4445"
    environment:
      - DSN=postgres://${HYDRA_DB_USER}:${HYDRA_DB_PASS}@172.28.0.1:5432/${HYDRA_DB_NAME}?sslmode=disable
      - SECRETS_SYSTEM=${HYDRA_SYSTEM_SECRET}
      - URLS_SELF_ISSUER=https://${ODP_PUBLIC_HOST}/auth
      - URLS_LOGIN=https://${ODP_PUBLIC_HOST}/id/hydra/login
      - URLS_CONSENT=https://${ODP_PUBLIC_HOST}/id/hydra/consent
      - URLS_LOGOUT=https://${ODP_PUBLIC_HOST}/id/hydra/logout
      - LOG_LEAK_SENSITIVE_VALUES=true
      - SERVE_PUBLIC_CORS_ENABLED=true
      - SERVE_PUBLIC_CORS_ALLOWED_HEADERS=Authorization,Content-Type,X-Requested-With
      - SERVE_TLS_ALLOW_TERMINATION_FROM=${HYDRA_TLS_TERMINATION_FROM}
    depends_on:
      - hydra-migrate
    restart: always

  hydra-migrate:
    container_name: hydra-migrate
    image: ${HYDRA_IMAGE}
    command: migrate sql -e --yes
    networks:
      - odp-net
    environment:
      - DSN=postgres://${HYDRA_DB_USER}:${HYDRA_DB_PASS}@172.28.0.1:5432/${HYDRA_DB_NAME}?sslmode=disable
    restart: on-failure

  redis:
    container_name: redis
    image: redis:6
    networks:
      - odp-net
    volumes:
      - redis-data:/data
    restart: always

  oathkeeper:
    container_name: oathkeeper
    build:
      context: oathkeeper
      args:
        - CA_CERT_URL
        - ODP_UI_DAP_URL
        - ODP_UI_DAP_THREDDS_URL
    command: serve --config /config.yml
    networks:
      - odp-net
    ports:
      - "4455:4455"
    extra_hosts:
      - "${ODP_PUBLIC_HOST}:172.28.0.1"
    restart: always
