version: "3.5"

services:
  odp-identity:
    container_name: odp-identity
    build:
      context: ..
      dockerfile: deploy/odp-identity/Dockerfile
      args:
        - CA_CERT_URL
    network_mode: host
    environment:
      - ODP_ENV
      - FLASK_ENV=${ODP_ENV}
      - ODP_IDENTITY_FLASK_KEY
      - ODP_DB_HOST
      - ODP_DB_NAME
      - ODP_DB_USER
      - ODP_DB_PASS
      - ODP_MAIL_HOST
      - ODP_MAIL_PORT
      - ODP_MAIL_TLS
      - ODP_MAIL_USERNAME
      - ODP_MAIL_PASSWORD
      - ODP_IDENTITY_LOGIN_EXPIRY=2592000
      - ODP_IDENTITY_NCCRD_BRAND_CLIENT_ID
      - HYDRA_ADMIN_URL
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
      - GUNICORN_CMD_ARGS=--forwarded-allow-ips=*
      - TZ
      - GOOGLE_ENABLE
      - GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET
      - GOOGLE_SCOPE=["openid","email","profile"]
      - GOOGLE_AUTH_URI=https://accounts.google.com/o/oauth2/auth
      - GOOGLE_TOKEN_URI=https://oauth2.googleapis.com/token
      - GOOGLE_OPENID_URI=https://accounts.google.com/.well-known/openid-configuration
      - PYTHONUNBUFFERED=1
    restart: always

  odp-api:
    container_name: odp-api
    build:
      context: ..
      dockerfile: deploy/odp-api/Dockerfile
      args:
        - CA_CERT_URL
    network_mode: host
    environment:
      - ODP_ENV
      - ODP_API_PATH_PREFIX=/api
      - ODP_API_ALLOW_ORIGINS
      - ODP_DB_HOST
      - ODP_DB_NAME
      - ODP_DB_USER
      - ODP_DB_PASS
      - HYDRA_ADMIN_URL
      - HYDRA_PUBLIC_URL
      - CATALOGUE_METADATA_LANDING_PAGE_BASE_URL
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
      - TZ
      - MEDIA_REPOSITORY_BASE_URL
      - MEDIA_USERNAME
      - MEDIA_PASSWORD
      - PYTHONUNBUFFERED=1
    restart: always

  odp-ui-admin:
    container_name: odp-ui-admin
    build:
      context: ..
      dockerfile: deploy/odp-ui-admin/Dockerfile
      args:
        - CA_CERT_URL
    network_mode: host
    environment:
      - ODP_ENV
      - FLASK_ENV=${ODP_ENV}
      - ODP_UI_ADMIN_FLASK_KEY
      - ODP_UI_ADMIN_CLIENT_ID
      - ODP_UI_ADMIN_CLIENT_SECRET
      - ODP_UI_ADMIN_API_URL=${ODP_PUBLIC_URL}/api
      - ODP_DB_HOST
      - ODP_DB_NAME
      - ODP_DB_USER
      - ODP_DB_PASS
      - HYDRA_PUBLIC_URL
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
      - GUNICORN_CMD_ARGS=--forwarded-allow-ips=*
      - TZ
      - PYTHONUNBUFFERED=1
    restart: always

  odp-ui-dap:
    container_name: odp-ui-dap
    build:
      context: ..
      dockerfile: deploy/odp-ui-dap/Dockerfile
      args:
        - CA_CERT_URL
    network_mode: host
    environment:
      - ODP_ENV
      - FLASK_ENV=${ODP_ENV}
      - ODP_UI_DAP_FLASK_KEY
      - ODP_UI_DAP_CLIENT_ID
      - ODP_UI_DAP_CLIENT_SECRET
      - ODP_UI_DAP_THREDDS_URL
      - ODP_UI_DAP_SERVER_NAME=${ODP_DAP_DOMAIN}
      - ODP_DB_HOST
      - ODP_DB_NAME
      - ODP_DB_USER
      - ODP_DB_PASS
      - HYDRA_PUBLIC_URL
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
      - GUNICORN_CMD_ARGS=--forwarded-allow-ips=*
      - TZ
      - PYTHONUNBUFFERED=1
    restart: always

  hydra:
    container_name: hydra
    image: ${HYDRA_IMAGE}
    network_mode: host
    environment:
      - DSN=postgres://${HYDRA_DB_USER}:${HYDRA_DB_PASS}@${HYDRA_DB_HOST}:5432/${HYDRA_DB_NAME}?sslmode=disable
      - SECRETS_SYSTEM=${HYDRA_SYSTEM_SECRET}
      - URLS_SELF_ISSUER=${ODP_PUBLIC_URL}/auth
      - URLS_LOGIN=${ODP_PUBLIC_URL}/id/hydra/login
      - URLS_CONSENT=${ODP_PUBLIC_URL}/id/hydra/consent
      - URLS_LOGOUT=${ODP_PUBLIC_URL}/id/hydra/logout
      - LOG_LEAK_SENSITIVE_VALUES=true
      - SERVE_PUBLIC_CORS_ENABLED=true
      - SERVE_PUBLIC_CORS_ALLOWED_HEADERS=Authorization,Content-Type,X-Requested-With
      - SERVE_TLS_ALLOW_TERMINATION_FROM=127.0.0.1/32
    depends_on:
      - hydra-migrate
    restart: always

  hydra-migrate:
    container_name: hydra-migrate
    image: ${HYDRA_IMAGE}
    command: migrate sql -e --yes
    network_mode: host
    environment:
      - DSN=postgres://${HYDRA_DB_USER}:${HYDRA_DB_PASS}@${HYDRA_DB_HOST}:5432/${HYDRA_DB_NAME}?sslmode=disable
    restart: on-failure

  redis:
    container_name: redis
    image: redis:6
    network_mode: host
    restart: always

  oathkeeper:
    container_name: oathkeeper
    build:
      context: oathkeeper
      args:
        - CA_CERT_URL
        - ODP_UI_DAP_URL
        - ODP_UI_DAP_THREDDS_URL
    command: serve --config /config.yml
    network_mode: host
    restart: always
