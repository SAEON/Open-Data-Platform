version: '3.5'

networks:
  ckan-net:
    name: ckan-net
  elastic-net:
    name: elastic-net

volumes:
  elastic-data:
    name: elastic-data

services:
  odp-metadata-api:
    container_name: odp-metadata-api
    build:
      context: metadata-services/odp-api
      dockerfile: Dockerfile-${SERVER_ENV}
      args:
        - CA_CERT_URL=${ODP_ADMIN_URL}/ca.crt
    networks:
      - ckan-net
      - elastic-net
    ports:
      - "8888:8888"
    environment:
      - SERVER_ENV
      - PATH_PREFIX=/api
      - ALLOW_ORIGINS=${CORS_ORIGINS}
      - ADMIN_API_URL=${ODP_ADMIN_URL}/api
      - METADATA.ADAPTER=CKANAdapter
      - METADATA.OAUTH2_SCOPE=ODP.Metadata
      - METADATA.READONLY_ROLES=["member"]
      - METADATA.READWRITE_ROLES=["contributor"]
      - METADATA.ADMIN_ROLES=["curator"]
      - CKAN_ADAPTER.CKAN_URL=http://ckan:5000
      - SEARCH.ADAPTER=ElasticAdapter
      - SEARCH.OAUTH2_SCOPE=ODP.Metadata
      - ELASTIC_ADAPTER.ES_URL=http://elasticsearch:9200
      - ELASTIC_ADAPTER.INDICES=["saeon-odp-4-2","sans-1878-mims-1","sans-1878-mims-historical-1","sans-1878-sadco-historical-1"]
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    restart: always

  ckan:
    container_name: ckan
    build:
      context: metadata-services/ckan-metadata
      args:
        - SERVER_ENV
        - CA_CERT_URL=${ODP_ADMIN_URL}/ca.crt
        - CKAN_URL
        - CKAN_DB_URL=postgresql://ckan_default:${CKAN_DB_PASSWORD}@${CKAN_DB_HOST}/ckan_default
        - DOI_PREFIX=10.15493
        - HYDRA_PUBLIC_URL=${ODP_PUBLIC_URL}/auth
        - HYDRA_ADMIN_URL=${ODP_ADMIN_URL}/hydra
        - OAUTH2_CLIENT_SECRET=${CKAN_OAUTH2_SECRET}
        - IDENTITY_SERVICE_URL=${ODP_PUBLIC_URL}/id
        - ELASTIC_AGENT_URL=http://es-agent:9210
        - SOLR_URL=http://solr:8983/solr
        - REDIS_URL=http://redis:6379/0
        - RABBITMQ_HOST=rabbitmq
        - CKAN_ADMIN_ORG=saeon
        - CKAN_ADMIN_ROLE=administrator
        - CKAN_CURATOR_ROLE=curator
        - CKAN_CONTRIBUTOR_ROLE=contributor
    networks:
      - ckan-net
      - elastic-net
    ports:
      - "5000:5000"
    environment:
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    depends_on:
      - solr
      - redis
      - rabbitmq
    restart: always

  pycsw:
    container_name: pycsw
    build:
      context: metadata-services/pycsw
      args:
        - ELASTIC_AGENT_SEARCH_URL=http://es-agent:9210/search
    networks:
      - elastic-net
    ports:
      - "8000:8000"
    depends_on:
      - es-agent
    restart: always

  es-agent:
    container_name: es-agent
    build:
      context: metadata-services/es-agent
    networks:
      - elastic-net
    ports:
      - "9210:9210"
    environment:
      - ELASTIC_AGENT_HOST=localhost
      - ELASTIC_AGENT_PORT=9210
      - ELASTIC_SEARCH_HOST=elasticsearch
      - ELASTIC_SEARCH_PORT=9200
    depends_on:
      - elasticsearch
    restart: always

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
    networks:
      - elastic-net
    ports:
      - "9200:9200"
    environment:
      - cluster.name=docker-cluster
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic-data:/usr/share/elasticsearch/data/
    restart: always

  solr:
    container_name: solr
    build:
      context: metadata-services/solr
    networks:
      - ckan-net
    restart: always

  redis:
    container_name: redis
    image: redis:5
    networks:
      - ckan-net
    restart: always

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3
    networks:
      - ckan-net
    restart: always
